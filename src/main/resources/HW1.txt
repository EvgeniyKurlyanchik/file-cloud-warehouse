Письменно ответы на вопросы:
- Как организовать клиент-серверное взаимодействие?
Соединение клиент-сервер устанавливается через сокеты. На сервере поднимается Netty-сервер
- Как и в каком виде передавать файлы?
Файлы передаются в виде потока байтов(пакетов байтов)
- Как пересылать большие файлы?
Файл разбивается на части, объем этой части мы устанавливаем сами в зависимости от поставленной задачи.

- Как пересылать служебные команды?
Служебные команды передаются в объектах
- Что хранить в базе данных?
Для хранения данных используем SQLite . В базе данных : сведения о пользователях (id, имя, пароль); сведения о файлах, хранящихся на сервере(id, id пользователя, имя файла, размер, дата создания и обновления)
- Как передавать структуру каталогов/файлов?
 Файлы всех пользователей хранятся на сервере в  каталоге(один клиент-один подкаталог), при хранении используется служебное имя, совпадающее с Id файла в базе данных.
При запросе клиент видит свой каталог, далее проваливается в свою директорию.Возможно выпадающий спписок.
- Какую библиотеку использовать для сетевого взаимодействия:
java.io, java.nio, Netty?
Для сетевого взаимодействия используются Netty (на сервере) и java.io на клиенте.

Требования к клиенту:
1. Авторизация и контроль ее.
2.две файловые системы(локальная и серверная)
3.Возможность загружать, скачивать и удалять файлы на сервере.

Требования к серверу
1.Нет GUI
2.вторизация
3. Менеджмент файлов
4. Проверка прав
5. Мультиюзерность
6.Изолированность директорий пользователей
7. Ограничениет квоты дискового пространства юзера.

СУБД
1.Пользователт(парольхеш-логин)